SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.000156
      median-lower-bound: 3.9e-05
      median-upper-bound: 0.000156
      min-lower-bound: 3.9e-05
    FullCache:
      max-upper-bound: 0.000156
      median-lower-bound: 3.85e-05
      median-upper-bound: 0.000154
      min-lower-bound: 3.8e-05
    HotCache:
      max-upper-bound: 0.000156
      median-lower-bound: 3.85e-05
      median-upper-bound: 0.000154
      min-lower-bound: 3.8e-05
    Load/1:
      max-upper-bound: 0.000166
      median-lower-bound: 4.15e-05
      median-upper-bound: 0.000166
      min-lower-bound: 4.1e-05
    Load/2:
      max-upper-bound: 0.000166
      median-lower-bound: 4.15e-05
      median-upper-bound: 0.000166
      min-lower-bound: 4.1e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000326
      median-lower-bound: 8.15e-05
      median-upper-bound: 0.000326
      min-lower-bound: 8.1e-05
    FullCache:
      max-upper-bound: 0.000286
      median-lower-bound: 3.55e-05
      median-upper-bound: 0.000142
      min-lower-bound: 3.5e-05
    HotCache:
      max-upper-bound: 0.000134
      median-lower-bound: 3.35e-05
      median-upper-bound: 0.000134
      min-lower-bound: 3.3e-05
    Load/1:
      max-upper-bound: 0.000322
      median-lower-bound: 8.0e-05
      median-upper-bound: 0.00032
      min-lower-bound: 7.95e-05
    Load/2:
      max-upper-bound: 0.000382
      median-lower-bound: 9.35e-05
      median-upper-bound: 0.000374
      min-lower-bound: 9.3e-05
  sparc/gr712rc/uni/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.0002
      median-lower-bound: 5.0e-05
      median-upper-bound: 0.0002
      min-lower-bound: 0.0
    FullCache:
      max-upper-bound: 0.0002
      median-lower-bound: 5.0e-05
      median-upper-bound: 0.0002
      min-lower-bound: 0.0
    HotCache:
      max-upper-bound: 0.0002
      median-lower-bound: 5.0e-05
      median-upper-bound: 0.0002
      min-lower-bound: 0.0
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 5.0e-05
      median-upper-bound: 0.0002
      min-lower-bound: 0.0
  sparc/gr712rc/uni/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000212
      median-lower-bound: 5.3e-05
      median-upper-bound: 0.000212
      min-lower-bound: 5.25e-05
    FullCache:
      max-upper-bound: 0.000196
      median-lower-bound: 2.25e-05
      median-upper-bound: 9.0e-05
      min-lower-bound: 2.25e-05
    HotCache:
      max-upper-bound: 8.4e-05
      median-lower-bound: 2.1e-05
      median-upper-bound: 8.4e-05
      min-lower-bound: 2.05e-05
    Load/1:
      max-upper-bound: 0.00022
      median-lower-bound: 5.45e-05
      median-upper-bound: 0.000218
      min-lower-bound: 5.45e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 0.00014988
      median-lower-bound: 3.715e-05
      median-upper-bound: 0.0001486
      min-lower-bound: 3.703e-05
    FullCache:
      max-upper-bound: 0.00014644
      median-lower-bound: 3.661e-05
      median-upper-bound: 0.00014644
      min-lower-bound: 3.659e-05
    HotCache:
      max-upper-bound: 0.00014632
      median-lower-bound: 3.658e-05
      median-upper-bound: 0.00014632
      min-lower-bound: 3.658e-05
    Load/1:
      max-upper-bound: 0.00015744
      median-lower-bound: 3.926e-05
      median-upper-bound: 0.00015704
      min-lower-bound: 3.9e-05
    Load/2:
      max-upper-bound: 0.00015744
      median-lower-bound: 3.926e-05
      median-upper-bound: 0.00015704
      min-lower-bound: 3.9e-05
    Load/3:
      max-upper-bound: 0.00015744
      median-lower-bound: 3.926e-05
      median-upper-bound: 0.00015704
      min-lower-bound: 3.9e-05
    Load/4:
      max-upper-bound: 0.00015744
      median-lower-bound: 3.926e-05
      median-upper-bound: 0.00015704
      min-lower-bound: 3.9e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 0.000131184
      median-lower-bound: 3.1192e-05
      median-upper-bound: 0.000124768
      min-lower-bound: 3.0298e-05
    FullCache:
      max-upper-bound: 0.000123064
      median-lower-bound: 1.37e-05
      median-upper-bound: 5.48e-05
      min-lower-bound: 1.365e-05
    HotCache:
      max-upper-bound: 3.336e-05
      median-lower-bound: 8.238e-06
      median-upper-bound: 3.2952e-05
      min-lower-bound: 8.238e-06
    Load/1:
      max-upper-bound: 0.000184344
      median-lower-bound: 2.9632e-05
      median-upper-bound: 0.000118528
      min-lower-bound: 2.8994e-05
    Load/2:
      max-upper-bound: 0.000826384
      median-lower-bound: 0.00020054
      median-upper-bound: 0.00080216
      min-lower-bound: 0.000200332
    Load/3:
      max-upper-bound: 0.001288688
      median-lower-bound: 0.000314378
      median-upper-bound: 0.001257512
      min-lower-bound: 0.00031287
    Load/4:
      max-upper-bound: 0.001554912
      median-lower-bound: 0.000371362
      median-upper-bound: 0.001485448
      min-lower-bound: 0.000371018
  sparc/gr740/uni/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 0.00010084
      median-lower-bound: 2.519e-05
      median-upper-bound: 0.00010076
      min-lower-bound: 2.519e-05
    FullCache:
      max-upper-bound: 9.92e-05
      median-lower-bound: 2.464e-05
      median-upper-bound: 9.856e-05
      min-lower-bound: 2.448e-05
    HotCache:
      max-upper-bound: 9.812e-05
      median-lower-bound: 2.453e-05
      median-upper-bound: 9.812e-05
      min-lower-bound: 2.449e-05
    Load/1:
      max-upper-bound: 0.00010836
      median-lower-bound: 2.709e-05
      median-upper-bound: 0.00010836
      min-lower-bound: 2.705e-05
  sparc/gr740/uni/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 8.0904e-05
      median-lower-bound: 1.9816e-05
      median-upper-bound: 7.9264e-05
      min-lower-bound: 1.9676e-05
    FullCache:
      max-upper-bound: 7.06e-05
      median-lower-bound: 8.264e-06
      median-upper-bound: 3.3056e-05
      min-lower-bound: 8.224e-06
    HotCache:
      max-upper-bound: 1.8264e-05
      median-lower-bound: 4.49e-06
      median-upper-bound: 1.796e-05
      min-lower-bound: 4.49e-06
    Load/1:
      max-upper-bound: 8.4168e-05
      median-lower-bound: 2.0602e-05
      median-upper-bound: 8.2408e-05
      min-lower-bound: 2.0482e-05
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Restart the worker task.
  code: |
    ctx->begin = T_tick();
    ctx->status = rtems_task_restart(
      ctx->worker_id,
      (rtems_task_argument) ctx
    );
  description: null
test-cleanup:
  brief: |
    Delete the worker task.
  code: |
    DeleteTask( ctx->worker_id );
  description: null
test-prepare:
  brief: |
    Create and start a worker task.
  code: |
    ctx->worker_id = CreateTask( "WORK", PRIO_HIGH );
    StartTask( ctx->worker_id, Worker, ctx );
  description: null
test-setup: null
test-teardown:
  brief: |
    Set the measured runtime.  Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    *delta = ctx->end - ctx->begin;

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with the same home scheduler.  Let :math:`B`
  be a time point measured by U right before a call to
  ${../if/restart:/name} which starts task V which preempts the caller.
  Let :math:`E` be a time point measured by V right after the first context
  switch after :math:`B`.

  While the execution environment is ${.:/environment}, while the measurement
  sample is :math:`E - B`, the ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
