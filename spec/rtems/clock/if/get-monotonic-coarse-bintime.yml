SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
brief: |
  Gets the time elapsed since some fixed time point in the past measured using
  the ${/glossary/clock-monotonic:/term} in coarse precision in binary time
  format.
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
definition:
  default:
    attributes: null
    body: null
    params:
    - ${bintime:/name} *${.:/params[0]/name}
    return: void
  variants: []
description: null
enabled-by: true
index-entries: []
interface-type: function
links:
- role: interface-placement
  uid: header
- role: interface-ingroup
  uid: group
- role: constraint
  uid: /constraint/directive-ctx-any
- role: constraint
  uid: /constraint/directive-no-preempt
- role: constraint
  uid: /constraint/clock-driver
name: rtems_clock_get_monotonic_coarse_bintime
notes: |
  The directive does not access a device to get the time.  It uses a recent
  snapshot provided by the ${/glossary/clock-driver:/term}.  Alternatively, the
  ${get-monotonic-bintime:/name} directive may be used to get the time with
  higher presision and higher runtime overhead.

  See ${get-monotonic-coarse:/name} and ${get-monotonic-coarse-timeval:/name}
  to get the time in alternative formats.
params:
- description: |
    is the pointer to a ${/c/if/bintime:/name} object.  The time elapsed since
    some fixed time point in the past measured using the
    ${/glossary/clock-monotonic:/term} at some time point close to the
    directive call will be stored in this object.  Calling the directive with a
    pointer equal to ${/c/if/null:/name} is undefined behaviour.
  dir: out
  name: time_snapshot
return: null
type: interface
