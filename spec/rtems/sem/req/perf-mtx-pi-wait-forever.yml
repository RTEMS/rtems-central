SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.00011
      median-lower-bound: 2.75e-05
      median-upper-bound: 0.00011
      min-lower-bound: 2.75e-05
    FullCache:
      max-upper-bound: 0.000108
      median-lower-bound: 2.7e-05
      median-upper-bound: 0.000108
      min-lower-bound: 2.65e-05
    HotCache:
      max-upper-bound: 0.000108
      median-lower-bound: 2.7e-05
      median-upper-bound: 0.000108
      min-lower-bound: 2.65e-05
    Load/1:
      max-upper-bound: 0.000124
      median-lower-bound: 3.1e-05
      median-upper-bound: 0.000124
      min-lower-bound: 3.05e-05
    Load/2:
      max-upper-bound: 0.000124
      median-lower-bound: 3.1e-05
      median-upper-bound: 0.000124
      min-lower-bound: 3.05e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000276
      median-lower-bound: 6.9e-05
      median-upper-bound: 0.000276
      min-lower-bound: 6.85e-05
    FullCache:
      max-upper-bound: 0.000158
      median-lower-bound: 2.85e-05
      median-upper-bound: 0.000114
      min-lower-bound: 2.85e-05
    HotCache:
      max-upper-bound: 0.000108
      median-lower-bound: 2.7e-05
      median-upper-bound: 0.000108
      min-lower-bound: 2.65e-05
    Load/1:
      max-upper-bound: 0.000284
      median-lower-bound: 7.05e-05
      median-upper-bound: 0.000282
      min-lower-bound: 7.05e-05
    Load/2:
      max-upper-bound: 0.000336
      median-lower-bound: 8.3e-05
      median-upper-bound: 0.000332
      min-lower-bound: 8.3e-05
  sparc/gr712rc/uni/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    FullCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    HotCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 5.0e-05
      median-upper-bound: 0.0002
      min-lower-bound: 0.0
  sparc/gr712rc/uni/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.00017
      median-lower-bound: 4.2e-05
      median-upper-bound: 0.000168
      min-lower-bound: 4.2e-05
    FullCache:
      max-upper-bound: 9.8e-05
      median-lower-bound: 1.6e-05
      median-upper-bound: 6.4e-05
      min-lower-bound: 1.55e-05
    HotCache:
      max-upper-bound: 6.0e-05
      median-lower-bound: 1.45e-05
      median-upper-bound: 5.8e-05
      min-lower-bound: 1.45e-05
    Load/1:
      max-upper-bound: 0.000176
      median-lower-bound: 4.4e-05
      median-upper-bound: 0.000176
      min-lower-bound: 4.35e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 0.000105
      median-lower-bound: 2.625e-05
      median-upper-bound: 0.000105
      min-lower-bound: 2.625e-05
    FullCache:
      max-upper-bound: 0.00010296
      median-lower-bound: 2.568e-05
      median-upper-bound: 0.00010272
      min-lower-bound: 2.564e-05
    HotCache:
      max-upper-bound: 0.00010284
      median-lower-bound: 2.571e-05
      median-upper-bound: 0.00010284
      min-lower-bound: 2.563e-05
    Load/1:
      max-upper-bound: 0.00011816
      median-lower-bound: 2.954e-05
      median-upper-bound: 0.00011816
      min-lower-bound: 2.946e-05
    Load/2:
      max-upper-bound: 0.00011816
      median-lower-bound: 2.954e-05
      median-upper-bound: 0.00011816
      min-lower-bound: 2.946e-05
    Load/3:
      max-upper-bound: 0.00011832
      median-lower-bound: 2.958e-05
      median-upper-bound: 0.00011832
      min-lower-bound: 2.934e-05
    Load/4:
      max-upper-bound: 0.00011832
      median-lower-bound: 2.958e-05
      median-upper-bound: 0.00011832
      min-lower-bound: 2.934e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 0.000112208
      median-lower-bound: 2.7194e-05
      median-upper-bound: 0.000108776
      min-lower-bound: 2.621e-05
    FullCache:
      max-upper-bound: 8.3136e-05
      median-lower-bound: 1.2762e-05
      median-upper-bound: 5.1048e-05
      min-lower-bound: 1.2678e-05
    HotCache:
      max-upper-bound: 2.4432e-05
      median-lower-bound: 5.964e-06
      median-upper-bound: 2.3856e-05
      min-lower-bound: 5.964e-06
    Load/1:
      max-upper-bound: 0.000161576
      median-lower-bound: 2.6626e-05
      median-upper-bound: 0.000106504
      min-lower-bound: 2.6004e-05
    Load/2:
      max-upper-bound: 0.000718024
      median-lower-bound: 0.000178464
      median-upper-bound: 0.000713856
      min-lower-bound: 0.000178106
    Load/3:
      max-upper-bound: 0.001148736
      median-lower-bound: 0.000284654
      median-upper-bound: 0.001138616
      min-lower-bound: 0.00028356
    Load/4:
      max-upper-bound: 0.001350688
      median-lower-bound: 0.000336698
      median-upper-bound: 0.001346792
      min-lower-bound: 0.000334676
  sparc/gr740/uni/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 7.396e-05
      median-lower-bound: 1.849e-05
      median-upper-bound: 7.396e-05
      min-lower-bound: 1.849e-05
    FullCache:
      max-upper-bound: 7.192e-05
      median-lower-bound: 1.798e-05
      median-upper-bound: 7.192e-05
      min-lower-bound: 1.764e-05
    HotCache:
      max-upper-bound: 7.108e-05
      median-lower-bound: 1.777e-05
      median-upper-bound: 7.108e-05
      min-lower-bound: 1.773e-05
    Load/1:
      max-upper-bound: 8.192e-05
      median-lower-bound: 2.048e-05
      median-upper-bound: 8.192e-05
      min-lower-bound: 2.048e-05
  sparc/gr740/uni/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 6.7592e-05
      median-lower-bound: 1.658e-05
      median-upper-bound: 6.632e-05
      min-lower-bound: 1.6494e-05
    FullCache:
      max-upper-bound: 3.8328e-05
      median-lower-bound: 6.492e-06
      median-upper-bound: 2.5968e-05
      min-lower-bound: 6.472e-06
    HotCache:
      max-upper-bound: 1.1928e-05
      median-lower-bound: 2.95e-06
      median-upper-bound: 1.18e-05
      min-lower-bound: 2.95e-06
    Load/1:
      max-upper-bound: 7.1848e-05
      median-lower-bound: 1.7368e-05
      median-upper-bound: 6.9472e-05
      min-lower-bound: 1.7292e-05
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Obtain the unavailable mutex and wait forever.
  code: |
    ctx->begin = T_tick();
    ctx->status = rtems_semaphore_obtain(
      ctx->mutex_id,
      RTEMS_WAIT,
      RTEMS_NO_TIMEOUT
    );
  description: null
test-cleanup: null
test-prepare: null
test-setup:
  brief: |
    Make the mutex unavailable.
  code: |
    Send( ctx, EVENT_OBTAIN );
    SetPriority( ctx->worker_id, PRIO_LOW );
    Send( ctx, EVENT_END | EVENT_RELEASE );
  description: null
test-teardown:
  brief: |
    Set the measured runtime.  Restore the worker priority.  Release the mutex.
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc( ctx->status, RTEMS_SUCCESSFUL );

    *delta = ctx->end - ctx->begin;
    SetPriority( ctx->worker_id, PRIO_HIGH );
    ReleaseMutex( ctx->mutex_id );

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with the same home scheduler.  Let :math:`B`
  be a time point measured by U right before a call to
  ${../if/obtain:/name} which blocks on the mutex with no timeout.  Let
  :math:`E` be a time point measured by V right after the first context
  switch after :math:`B`.

  While the execution environment is ${.:/environment}, while the semaphore is
  a priority inheritance mutex, while the measurement sample is :math:`E - B`,
  when exactly ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
