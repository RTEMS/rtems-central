SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 8.4e-05
      median-lower-bound: 2.05e-05
      median-upper-bound: 8.2e-05
      min-lower-bound: 2.05e-05
    FullCache:
      max-upper-bound: 8.2e-05
      median-lower-bound: 2.0e-05
      median-upper-bound: 8.0e-05
      min-lower-bound: 1.95e-05
    HotCache:
      max-upper-bound: 8.0e-05
      median-lower-bound: 2.0e-05
      median-upper-bound: 8.0e-05
      min-lower-bound: 1.95e-05
    Load/1:
      max-upper-bound: 9.6e-05
      median-lower-bound: 2.35e-05
      median-upper-bound: 9.4e-05
      min-lower-bound: 2.3e-05
    Load/2:
      max-upper-bound: 9.6e-05
      median-lower-bound: 2.35e-05
      median-upper-bound: 9.4e-05
      min-lower-bound: 2.35e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.00021
      median-lower-bound: 5.2e-05
      median-upper-bound: 0.000208
      min-lower-bound: 5.15e-05
    FullCache:
      max-upper-bound: 0.000156
      median-lower-bound: 2.1e-05
      median-upper-bound: 8.4e-05
      min-lower-bound: 2.05e-05
    HotCache:
      max-upper-bound: 7.8e-05
      median-lower-bound: 1.95e-05
      median-upper-bound: 7.8e-05
      min-lower-bound: 1.95e-05
    Load/1:
      max-upper-bound: 0.000212
      median-lower-bound: 5.25e-05
      median-upper-bound: 0.00021
      min-lower-bound: 5.25e-05
    Load/2:
      max-upper-bound: 0.000256
      median-lower-bound: 6.2e-05
      median-upper-bound: 0.000248
      min-lower-bound: 6.2e-05
  sparc/gr712rc/uni/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    FullCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    HotCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
  sparc/gr712rc/uni/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000126
      median-lower-bound: 3.1e-05
      median-upper-bound: 0.000124
      min-lower-bound: 3.1e-05
    FullCache:
      max-upper-bound: 0.00011
      median-lower-bound: 1.25e-05
      median-upper-bound: 5.0e-05
      min-lower-bound: 1.2e-05
    HotCache:
      max-upper-bound: 5.0e-05
      median-lower-bound: 1.2e-05
      median-upper-bound: 4.8e-05
      min-lower-bound: 1.2e-05
    Load/1:
      max-upper-bound: 0.000132
      median-lower-bound: 3.3e-05
      median-upper-bound: 0.000132
      min-lower-bound: 3.25e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 7.736e-05
      median-lower-bound: 1.934e-05
      median-upper-bound: 7.736e-05
      min-lower-bound: 1.934e-05
    FullCache:
      max-upper-bound: 7.604e-05
      median-lower-bound: 1.891e-05
      median-upper-bound: 7.564e-05
      min-lower-bound: 1.889e-05
    HotCache:
      max-upper-bound: 7.624e-05
      median-lower-bound: 1.906e-05
      median-upper-bound: 7.624e-05
      min-lower-bound: 1.902e-05
    Load/1:
      max-upper-bound: 9.02e-05
      median-lower-bound: 2.255e-05
      median-upper-bound: 9.02e-05
      min-lower-bound: 2.243e-05
    Load/2:
      max-upper-bound: 9.004e-05
      median-lower-bound: 2.251e-05
      median-upper-bound: 9.004e-05
      min-lower-bound: 2.223e-05
    Load/3:
      max-upper-bound: 9.02e-05
      median-lower-bound: 2.255e-05
      median-upper-bound: 9.02e-05
      min-lower-bound: 2.243e-05
    Load/4:
      max-upper-bound: 9.02e-05
      median-lower-bound: 2.255e-05
      median-upper-bound: 9.02e-05
      min-lower-bound: 2.243e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 8.3288e-05
      median-lower-bound: 1.9524e-05
      median-upper-bound: 7.8096e-05
      min-lower-bound: 1.872e-05
    FullCache:
      max-upper-bound: 8.4776e-05
      median-lower-bound: 9.438e-06
      median-upper-bound: 3.7752e-05
      min-lower-bound: 9.394e-06
    HotCache:
      max-upper-bound: 1.6472e-05
      median-lower-bound: 4.018e-06
      median-upper-bound: 1.6072e-05
      min-lower-bound: 4.018e-06
    Load/1:
      max-upper-bound: 0.000124184
      median-lower-bound: 1.904e-05
      median-upper-bound: 7.616e-05
      min-lower-bound: 1.864e-05
    Load/2:
      max-upper-bound: 0.000534784
      median-lower-bound: 0.000127222
      median-upper-bound: 0.000508888
      min-lower-bound: 0.000127082
    Load/3:
      max-upper-bound: 0.000828448
      median-lower-bound: 0.000202946
      median-upper-bound: 0.000811784
      min-lower-bound: 0.00019972
    Load/4:
      max-upper-bound: 0.000987144
      median-lower-bound: 0.000238754
      median-upper-bound: 0.000955016
      min-lower-bound: 0.000238604
  sparc/gr740/uni/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 5.676e-05
      median-lower-bound: 1.411e-05
      median-upper-bound: 5.644e-05
      min-lower-bound: 1.401e-05
    FullCache:
      max-upper-bound: 5.416e-05
      median-lower-bound: 1.354e-05
      median-upper-bound: 5.416e-05
      min-lower-bound: 1.354e-05
    HotCache:
      max-upper-bound: 5.436e-05
      median-lower-bound: 1.359e-05
      median-upper-bound: 5.436e-05
      min-lower-bound: 1.359e-05
    Load/1:
      max-upper-bound: 6.456e-05
      median-lower-bound: 1.61e-05
      median-upper-bound: 6.44e-05
      min-lower-bound: 1.598e-05
  sparc/gr740/uni/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 5.2896e-05
      median-lower-bound: 1.32e-05
      median-upper-bound: 5.28e-05
      min-lower-bound: 1.3192e-05
    FullCache:
      max-upper-bound: 4.8104e-05
      median-lower-bound: 6.236e-06
      median-upper-bound: 2.4944e-05
      min-lower-bound: 6.196e-06
    HotCache:
      max-upper-bound: 9.76e-06
      median-lower-bound: 2.41e-06
      median-upper-bound: 9.64e-06
      min-lower-bound: 2.41e-06
    Load/1:
      max-upper-bound: 5.712e-05
      median-lower-bound: 1.414e-05
      median-upper-bound: 5.656e-05
      min-lower-bound: 1.4086e-05
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Receive a message.  Wait with a timeout.
  code: |
    uint64_t message;
    size_t   size;

    ctx->begin = T_tick();
    ctx->status = rtems_message_queue_receive(
      ctx->queue_id,
      &message,
      &size,
      RTEMS_WAIT,
      UINT32_MAX
    );
  description: null
test-cleanup: null
test-prepare: null
test-setup:
  brief: |
    Schedule a message send.
  code: |
    SetPriority( ctx->worker_id, PRIO_LOW );
    Send( ctx, EVENT_END | EVENT_SEND );
  description: null
test-teardown:
  brief: |
    Set the measured runtime.  Restore the worker priority.  Discard samples
    interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    *delta = ctx->end - ctx->begin;
    SetPriority( ctx->worker_id, PRIO_HIGH );

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with the same home scheduler.  Let :math:`B`
  be a time point measured by U right before a call to
  ${../if/receive:/name} which blocks on the message queue with a timeout.  Let
  :math:`E` be a time point measured by V right after the first context
  switch after :math:`B`.

  While the execution environment is ${.:/environment}, while a message queue
  is empty, while the measurement sample is :math:`E - B`, when exactly
  ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
