SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 5.6e-05
      median-lower-bound: 1.35e-05
      median-upper-bound: 5.4e-05
      min-lower-bound: 1.35e-05
    FullCache:
      max-upper-bound: 5.0e-05
      median-lower-bound: 1.25e-05
      median-upper-bound: 5.0e-05
      min-lower-bound: 1.2e-05
    HotCache:
      max-upper-bound: 5.2e-05
      median-lower-bound: 1.25e-05
      median-upper-bound: 5.0e-05
      min-lower-bound: 1.25e-05
    Load/1:
      max-upper-bound: 6.8e-05
      median-lower-bound: 1.7e-05
      median-upper-bound: 6.8e-05
      min-lower-bound: 1.65e-05
    Load/2:
      max-upper-bound: 6.8e-05
      median-lower-bound: 1.65e-05
      median-upper-bound: 6.6e-05
      min-lower-bound: 1.65e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000144
      median-lower-bound: 3.55e-05
      median-upper-bound: 0.000142
      min-lower-bound: 3.5e-05
    FullCache:
      max-upper-bound: 9.8e-05
      median-lower-bound: 1.3e-05
      median-upper-bound: 5.2e-05
      min-lower-bound: 1.25e-05
    HotCache:
      max-upper-bound: 5.0e-05
      median-lower-bound: 1.2e-05
      median-upper-bound: 4.8e-05
      min-lower-bound: 1.2e-05
    Load/1:
      max-upper-bound: 0.000156
      median-lower-bound: 3.85e-05
      median-upper-bound: 0.000154
      min-lower-bound: 3.8e-05
    Load/2:
      max-upper-bound: 0.000174
      median-lower-bound: 4.35e-05
      median-upper-bound: 0.000174
      min-lower-bound: 4.3e-05
  sparc/gr712rc/uni/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    FullCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    HotCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
  sparc/gr712rc/uni/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 7.8e-05
      median-lower-bound: 1.9e-05
      median-upper-bound: 7.6e-05
      min-lower-bound: 1.9e-05
    FullCache:
      max-upper-bound: 5.6e-05
      median-lower-bound: 5.0e-06
      median-upper-bound: 2.0e-05
      min-lower-bound: 5.0e-06
    HotCache:
      max-upper-bound: 2.2e-05
      median-lower-bound: 5.0e-06
      median-upper-bound: 2.0e-05
      min-lower-bound: 4.5e-06
    Load/1:
      max-upper-bound: 9.0e-05
      median-lower-bound: 2.2e-05
      median-upper-bound: 8.8e-05
      min-lower-bound: 2.2e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 5.24e-05
      median-lower-bound: 1.31e-05
      median-upper-bound: 5.24e-05
      min-lower-bound: 1.31e-05
    FullCache:
      max-upper-bound: 4.844e-05
      median-lower-bound: 1.205e-05
      median-upper-bound: 4.82e-05
      min-lower-bound: 1.201e-05
    HotCache:
      max-upper-bound: 4.824e-05
      median-lower-bound: 1.206e-05
      median-upper-bound: 4.824e-05
      min-lower-bound: 1.198e-05
    Load/1:
      max-upper-bound: 6.376e-05
      median-lower-bound: 1.594e-05
      median-upper-bound: 6.376e-05
      min-lower-bound: 1.578e-05
    Load/2:
      max-upper-bound: 6.376e-05
      median-lower-bound: 1.594e-05
      median-upper-bound: 6.376e-05
      min-lower-bound: 1.578e-05
    Load/3:
      max-upper-bound: 6.384e-05
      median-lower-bound: 1.596e-05
      median-upper-bound: 6.384e-05
      min-lower-bound: 1.592e-05
    Load/4:
      max-upper-bound: 6.384e-05
      median-lower-bound: 1.596e-05
      median-upper-bound: 6.384e-05
      min-lower-bound: 1.592e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 5.6328e-05
      median-lower-bound: 1.3736e-05
      median-upper-bound: 5.4944e-05
      min-lower-bound: 1.328e-05
    FullCache:
      max-upper-bound: 3.7944e-05
      median-lower-bound: 4.84e-06
      median-upper-bound: 1.936e-05
      min-lower-bound: 4.836e-06
    HotCache:
      max-upper-bound: 1.0888e-05
      median-lower-bound: 2.594e-06
      median-upper-bound: 1.0376e-05
      min-lower-bound: 2.594e-06
    Load/1:
      max-upper-bound: 9.796e-05
      median-lower-bound: 1.4458e-05
      median-upper-bound: 5.7832e-05
      min-lower-bound: 1.348e-05
    Load/2:
      max-upper-bound: 0.000327536
      median-lower-bound: 7.9166e-05
      median-upper-bound: 0.000316664
      min-lower-bound: 7.9102e-05
    Load/3:
      max-upper-bound: 0.000500904
      median-lower-bound: 0.000122864
      median-upper-bound: 0.000491456
      min-lower-bound: 0.000121272
    Load/4:
      max-upper-bound: 0.000578688
      median-lower-bound: 0.000143352
      median-upper-bound: 0.000573408
      min-lower-bound: 0.000140178
  sparc/gr740/uni/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 2.916e-05
      median-lower-bound: 7.27e-06
      median-upper-bound: 2.908e-05
      min-lower-bound: 7.13e-06
    FullCache:
      max-upper-bound: 2.472e-05
      median-lower-bound: 6.18e-06
      median-upper-bound: 2.472e-05
      min-lower-bound: 6.18e-06
    HotCache:
      max-upper-bound: 2.524e-05
      median-lower-bound: 6.31e-06
      median-upper-bound: 2.524e-05
      min-lower-bound: 6.31e-06
    Load/1:
      max-upper-bound: 4.068e-05
      median-lower-bound: 1.007e-05
      median-upper-bound: 4.028e-05
      min-lower-bound: 9.97e-06
  sparc/gr740/uni/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 3.5664e-05
      median-lower-bound: 8.54e-06
      median-upper-bound: 3.416e-05
      min-lower-bound: 8.486e-06
    FullCache:
      max-upper-bound: 3.0464e-05
      median-lower-bound: 2.886e-06
      median-upper-bound: 1.1544e-05
      min-lower-bound: 2.876e-06
    HotCache:
      max-upper-bound: 4.6e-06
      median-lower-bound: 1.15e-06
      median-upper-bound: 4.6e-06
      min-lower-bound: 1.15e-06
    Load/1:
      max-upper-bound: 4.0496e-05
      median-lower-bound: 9.764e-06
      median-upper-bound: 3.9056e-05
      min-lower-bound: 9.682e-06
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Release the barrier.
  code: |
    uint32_t count;

    ctx->status = rtems_barrier_release( ctx->barrier_id, &count );
  description: null
test-cleanup:
  brief: |
    Delete the barrier and the worker.
  code: |
    rtems_status_code sc;

    DeleteTask( ctx->worker_id );

    sc = rtems_barrier_delete( ctx->barrier_id );
    T_rsc_success( sc );

    RestoreRunnerPriority();
  description: null
test-prepare:
  brief: |
    Create a manual release barrier.  Create and start a worker task.
  code: |
    rtems_status_code sc;

    sc = rtems_barrier_create(
      OBJECT_NAME,
      RTEMS_BARRIER_MANUAL_RELEASE,
      0,
      &ctx->barrier_id
    );
    T_rsc_success( sc );

    SetSelfPriority( PRIO_NORMAL );
    ctx->worker_id = CreateTask( "WORK", PRIO_NORMAL );
    StartTask( ctx->worker_id, BarrierWaitWorker, ctx );
  description: null
test-setup:
  brief: |
    Make sure the worker task is fully blocked on the barrier.
  code: |
    Yield();
  description: null
test-teardown:
  brief: |
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    return tic == toc;
  description: null
text: |
  While the execution environment is ${.:/environment}, while the barrier is a
  manual release barrier, while the measurement sample is the runtime of exactly
  one successful call to ${../if/release:/name} which does not preempt the
  caller, when exactly ${../val/perf:/params/sample-count} samples are
  collected, the ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
