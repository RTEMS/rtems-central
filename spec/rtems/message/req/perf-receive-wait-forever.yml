SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 7.6e-05
      median-lower-bound: 1.9e-05
      median-upper-bound: 7.6e-05
      min-lower-bound: 1.85e-05
    FullCache:
      max-upper-bound: 7.4e-05
      median-lower-bound: 1.85e-05
      median-upper-bound: 7.4e-05
      min-lower-bound: 1.8e-05
    HotCache:
      max-upper-bound: 7.4e-05
      median-lower-bound: 1.85e-05
      median-upper-bound: 7.4e-05
      min-lower-bound: 1.8e-05
    Load/1:
      max-upper-bound: 8.8e-05
      median-lower-bound: 2.2e-05
      median-upper-bound: 8.8e-05
      min-lower-bound: 2.15e-05
    Load/2:
      max-upper-bound: 8.8e-05
      median-lower-bound: 2.2e-05
      median-upper-bound: 8.8e-05
      min-lower-bound: 2.15e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000196
      median-lower-bound: 4.85e-05
      median-upper-bound: 0.000194
      min-lower-bound: 4.85e-05
    FullCache:
      max-upper-bound: 0.000152
      median-lower-bound: 1.85e-05
      median-upper-bound: 7.4e-05
      min-lower-bound: 1.85e-05
    HotCache:
      max-upper-bound: 7.0e-05
      median-lower-bound: 1.75e-05
      median-upper-bound: 7.0e-05
      min-lower-bound: 1.7e-05
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 4.95e-05
      median-upper-bound: 0.000198
      min-lower-bound: 4.95e-05
    Load/2:
      max-upper-bound: 0.000238
      median-lower-bound: 5.8e-05
      median-upper-bound: 0.000232
      min-lower-bound: 5.75e-05
  sparc/gr712rc/uni/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    FullCache:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    HotCache:
      max-upper-bound: 0.0
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
    Load/1:
      max-upper-bound: 0.0002
      median-lower-bound: 0.0
      median-upper-bound: 0.0
      min-lower-bound: 0.0
  sparc/gr712rc/uni/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000116
      median-lower-bound: 2.85e-05
      median-upper-bound: 0.000114
      min-lower-bound: 2.85e-05
    FullCache:
      max-upper-bound: 0.00011
      median-lower-bound: 1.15e-05
      median-upper-bound: 4.6e-05
      min-lower-bound: 1.15e-05
    HotCache:
      max-upper-bound: 4.6e-05
      median-lower-bound: 1.15e-05
      median-upper-bound: 4.6e-05
      min-lower-bound: 1.1e-05
    Load/1:
      max-upper-bound: 0.000122
      median-lower-bound: 3.05e-05
      median-upper-bound: 0.000122
      min-lower-bound: 3.0e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 7.176e-05
      median-lower-bound: 1.784e-05
      median-upper-bound: 7.136e-05
      min-lower-bound: 1.776e-05
    FullCache:
      max-upper-bound: 6.868e-05
      median-lower-bound: 1.717e-05
      median-upper-bound: 6.868e-05
      min-lower-bound: 1.717e-05
    HotCache:
      max-upper-bound: 6.888e-05
      median-lower-bound: 1.722e-05
      median-upper-bound: 6.888e-05
      min-lower-bound: 1.722e-05
    Load/1:
      max-upper-bound: 8.356e-05
      median-lower-bound: 2.077e-05
      median-upper-bound: 8.308e-05
      min-lower-bound: 2.069e-05
    Load/2:
      max-upper-bound: 8.356e-05
      median-lower-bound: 2.077e-05
      median-upper-bound: 8.308e-05
      min-lower-bound: 2.069e-05
    Load/3:
      max-upper-bound: 8.356e-05
      median-lower-bound: 2.077e-05
      median-upper-bound: 8.308e-05
      min-lower-bound: 2.069e-05
    Load/4:
      max-upper-bound: 8.356e-05
      median-lower-bound: 2.077e-05
      median-upper-bound: 8.308e-05
      min-lower-bound: 2.069e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 7.6848e-05
      median-lower-bound: 1.8436e-05
      median-upper-bound: 7.3744e-05
      min-lower-bound: 1.7486e-05
    FullCache:
      max-upper-bound: 7.9496e-05
      median-lower-bound: 8.774e-06
      median-upper-bound: 3.5096e-05
      min-lower-bound: 8.734e-06
    HotCache:
      max-upper-bound: 1.4528e-05
      median-lower-bound: 3.56e-06
      median-upper-bound: 1.424e-05
      min-lower-bound: 3.56e-06
    Load/1:
      max-upper-bound: 0.000120608
      median-lower-bound: 1.7804e-05
      median-upper-bound: 7.1216e-05
      min-lower-bound: 1.7564e-05
    Load/2:
      max-upper-bound: 0.00050312
      median-lower-bound: 0.000119652
      median-upper-bound: 0.000478608
      min-lower-bound: 0.000119592
    Load/3:
      max-upper-bound: 0.000780432
      median-lower-bound: 0.000189674
      median-upper-bound: 0.000758696
      min-lower-bound: 0.000187986
    Load/4:
      max-upper-bound: 0.000930864
      median-lower-bound: 0.000223454
      median-upper-bound: 0.000893816
      min-lower-bound: 0.000223392
  sparc/gr740/uni/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 5.272e-05
      median-lower-bound: 1.314e-05
      median-upper-bound: 5.256e-05
      min-lower-bound: 1.3e-05
    FullCache:
      max-upper-bound: 5.036e-05
      median-lower-bound: 1.259e-05
      median-upper-bound: 5.036e-05
      min-lower-bound: 1.255e-05
    HotCache:
      max-upper-bound: 5.032e-05
      median-lower-bound: 1.258e-05
      median-upper-bound: 5.032e-05
      min-lower-bound: 1.258e-05
    Load/1:
      max-upper-bound: 6.028e-05
      median-lower-bound: 1.503e-05
      median-upper-bound: 6.012e-05
      min-lower-bound: 1.491e-05
  sparc/gr740/uni/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 5.2592e-05
      median-lower-bound: 1.1908e-05
      median-upper-bound: 4.7632e-05
      min-lower-bound: 1.1862e-05
    FullCache:
      max-upper-bound: 4.8024e-05
      median-lower-bound: 5.576e-06
      median-upper-bound: 2.2304e-05
      min-lower-bound: 5.56e-06
    HotCache:
      max-upper-bound: 8.816e-06
      median-lower-bound: 2.204e-06
      median-upper-bound: 8.816e-06
      min-lower-bound: 2.204e-06
    Load/1:
      max-upper-bound: 5.6224e-05
      median-lower-bound: 1.2816e-05
      median-upper-bound: 5.1264e-05
      min-lower-bound: 1.2756e-05
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Receive a message.  Wait forever.
  code: |
    uint64_t message;
    size_t   size;

    ctx->begin = T_tick();
    ctx->status = rtems_message_queue_receive(
      ctx->queue_id,
      &message,
      &size,
      RTEMS_WAIT,
      RTEMS_NO_TIMEOUT
    );
  description: null
test-cleanup: null
test-prepare: null
test-setup:
  brief: |
    Schedule a message send.
  code: |
    SetPriority( ctx->worker_id, PRIO_LOW );
    Send( ctx, EVENT_END | EVENT_SEND );
  description: null
test-teardown:
  brief: |
    Set the measured runtime.  Restore the worker priority.  Discard samples
    interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    *delta = ctx->end - ctx->begin;
    SetPriority( ctx->worker_id, PRIO_HIGH );

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with the same home scheduler.  Let :math:`B`
  be a time point measured by U right before a call to
  ${../if/receive:/name} which blocks on the message queue with no timeout.
  Let :math:`E` be a time point measured by V right after the first context
  switch after :math:`B`.

  While the execution environment is ${.:/environment}, while a message queue
  is empty, while the measurement sample is :math:`E - B`, when exactly
  ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
