SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: RTEMS_SMP
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 0.000126
      median-lower-bound: 3.1e-05
      median-upper-bound: 0.000124
      min-lower-bound: 3.05e-05
    FullCache:
      max-upper-bound: 0.000124
      median-lower-bound: 3.05e-05
      median-upper-bound: 0.000122
      min-lower-bound: 3.0e-05
    HotCache:
      max-upper-bound: 0.000124
      median-lower-bound: 3.1e-05
      median-upper-bound: 0.000124
      min-lower-bound: 3.05e-05
    Load/1:
      max-upper-bound: 0.000134
      median-lower-bound: 3.35e-05
      median-upper-bound: 0.000134
      min-lower-bound: 3.3e-05
    Load/2:
      max-upper-bound: 0.000134
      median-lower-bound: 3.3e-05
      median-upper-bound: 0.000132
      min-lower-bound: 3.25e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000318
      median-lower-bound: 7.9e-05
      median-upper-bound: 0.000316
      min-lower-bound: 7.85e-05
    FullCache:
      max-upper-bound: 0.000196
      median-lower-bound: 3.0e-05
      median-upper-bound: 0.00012
      min-lower-bound: 2.95e-05
    HotCache:
      max-upper-bound: 0.000118
      median-lower-bound: 2.9e-05
      median-upper-bound: 0.000116
      min-lower-bound: 2.85e-05
    Load/1:
      max-upper-bound: 0.000314
      median-lower-bound: 7.8e-05
      median-upper-bound: 0.000312
      min-lower-bound: 7.8e-05
    Load/2:
      max-upper-bound: 0.000366
      median-lower-bound: 9.1e-05
      median-upper-bound: 0.000364
      min-lower-bound: 9.05e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 0.00011944
      median-lower-bound: 2.975e-05
      median-upper-bound: 0.000119
      min-lower-bound: 2.926e-05
    FullCache:
      max-upper-bound: 0.00011764
      median-lower-bound: 2.941e-05
      median-upper-bound: 0.00011764
      min-lower-bound: 2.886e-05
    HotCache:
      max-upper-bound: 0.00011684
      median-lower-bound: 2.921e-05
      median-upper-bound: 0.00011684
      min-lower-bound: 2.914e-05
    Load/1:
      max-upper-bound: 0.00012576
      median-lower-bound: 3.132e-05
      median-upper-bound: 0.00012528
      min-lower-bound: 3.124e-05
    Load/2:
      max-upper-bound: 0.0001258
      median-lower-bound: 3.145e-05
      median-upper-bound: 0.0001258
      min-lower-bound: 3.127e-05
    Load/3:
      max-upper-bound: 0.0001258
      median-lower-bound: 3.145e-05
      median-upper-bound: 0.0001258
      min-lower-bound: 3.118e-05
    Load/4:
      max-upper-bound: 0.00012564
      median-lower-bound: 3.127e-05
      median-upper-bound: 0.00012508
      min-lower-bound: 3.117e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 0.0001264
      median-lower-bound: 2.8146e-05
      median-upper-bound: 0.000112584
      min-lower-bound: 2.7626e-05
    FullCache:
      max-upper-bound: 9.1288e-05
      median-lower-bound: 1.225e-05
      median-upper-bound: 4.9e-05
      min-lower-bound: 1.21e-05
    HotCache:
      max-upper-bound: 2.8448e-05
      median-lower-bound: 6.928e-06
      median-upper-bound: 2.7712e-05
      min-lower-bound: 6.928e-06
    Load/1:
      max-upper-bound: 0.000145552
      median-lower-bound: 2.6358e-05
      median-upper-bound: 0.000105432
      min-lower-bound: 2.6086e-05
    Load/2:
      max-upper-bound: 0.000639944
      median-lower-bound: 0.0001571
      median-upper-bound: 0.0006284
      min-lower-bound: 0.000156856
    Load/3:
      max-upper-bound: 0.001071048
      median-lower-bound: 0.000264426
      median-upper-bound: 0.001057704
      min-lower-bound: 0.000263772
    Load/4:
      max-upper-bound: 0.001344168
      median-lower-bound: 0.000333384
      median-upper-bound: 0.001333536
      min-lower-bound: 0.00032833
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Release the mutex.
  code: |
    ctx->begin = T_tick();
    ctx->status = rtems_semaphore_release( ctx->mutex_id );
  description: null
test-cleanup:
  brief: |
    Move worker to scheduler A.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_A_ID, PRIO_HIGH );
  description: null
test-prepare:
  brief: |
    Move worker to scheduler B.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_B_ID, PRIO_NORMAL );
  description: null
test-setup:
  brief: |
    Let one task wait on the mutex.
  code: |
    ObtainMutex( ctx->mutex_id );
    Send( ctx, EVENT_OBTAIN | EVENT_OBTAIN_END | EVENT_RELEASE );
    WaitForNextTask( 1, ctx->worker_id );
  description: null
test-teardown:
  brief: |
    Make sure the worker waits for the next event.  Set the measured runtime.
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc( ctx->status, RTEMS_SUCCESSFUL );

    WaitForNextTask( 1, ctx->worker_id );
    *delta = ctx->end - ctx->begin;

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with distinct home schedulers.  Let :math:`B`
  be a time point measured by U right before a call to
  ${../if/release:/name} which unblocks task V which is scheduled on
  another processor.  Let :math:`E` be a time point measured by V right
  after the first context switch after :math:`B`.

  While the execution environment is ${.:/environment}, while the semaphore is
  a priority inheritance mutex, while exactly task V waits on the mutex,
  while the measurement sample is :math:`E - B`, when exactly
  ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
