SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: RTEMS_SMP
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 9.4e-05
      median-lower-bound: 2.35e-05
      median-upper-bound: 9.4e-05
      min-lower-bound: 2.25e-05
    FullCache:
      max-upper-bound: 9.0e-05
      median-lower-bound: 2.25e-05
      median-upper-bound: 9.0e-05
      min-lower-bound: 2.2e-05
    HotCache:
      max-upper-bound: 9.2e-05
      median-lower-bound: 2.25e-05
      median-upper-bound: 9.0e-05
      min-lower-bound: 2.25e-05
    Load/1:
      max-upper-bound: 0.000102
      median-lower-bound: 2.55e-05
      median-upper-bound: 0.000102
      min-lower-bound: 2.5e-05
    Load/2:
      max-upper-bound: 0.000102
      median-lower-bound: 2.5e-05
      median-upper-bound: 0.0001
      min-lower-bound: 2.45e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000238
      median-lower-bound: 5.9e-05
      median-upper-bound: 0.000236
      min-lower-bound: 5.9e-05
    FullCache:
      max-upper-bound: 0.000112
      median-lower-bound: 2.1e-05
      median-upper-bound: 8.4e-05
      min-lower-bound: 2.05e-05
    HotCache:
      max-upper-bound: 8.2e-05
      median-lower-bound: 2.0e-05
      median-upper-bound: 8.0e-05
      min-lower-bound: 2.0e-05
    Load/1:
      max-upper-bound: 0.000234
      median-lower-bound: 5.8e-05
      median-upper-bound: 0.000232
      min-lower-bound: 5.8e-05
    Load/2:
      max-upper-bound: 0.000268
      median-lower-bound: 6.6e-05
      median-upper-bound: 0.000264
      min-lower-bound: 6.6e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 8.768e-05
      median-lower-bound: 2.181e-05
      median-upper-bound: 8.724e-05
      min-lower-bound: 2.172e-05
    FullCache:
      max-upper-bound: 8.576e-05
      median-lower-bound: 2.14e-05
      median-upper-bound: 8.56e-05
      min-lower-bound: 2.132e-05
    HotCache:
      max-upper-bound: 8.476e-05
      median-lower-bound: 2.119e-05
      median-upper-bound: 8.476e-05
      min-lower-bound: 2.117e-05
    Load/1:
      max-upper-bound: 9.576e-05
      median-lower-bound: 2.387e-05
      median-upper-bound: 9.548e-05
      min-lower-bound: 2.334e-05
    Load/2:
      max-upper-bound: 9.584e-05
      median-lower-bound: 2.375e-05
      median-upper-bound: 9.5e-05
      min-lower-bound: 2.321e-05
    Load/3:
      max-upper-bound: 9.584e-05
      median-lower-bound: 2.375e-05
      median-upper-bound: 9.5e-05
      min-lower-bound: 2.321e-05
    Load/4:
      max-upper-bound: 9.576e-05
      median-lower-bound: 2.386e-05
      median-upper-bound: 9.544e-05
      min-lower-bound: 2.317e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 9.4624e-05
      median-lower-bound: 2.0306e-05
      median-upper-bound: 8.1224e-05
      min-lower-bound: 1.9922e-05
    FullCache:
      max-upper-bound: 5.436e-05
      median-lower-bound: 9.22e-06
      median-upper-bound: 3.688e-05
      min-lower-bound: 9.106e-06
    HotCache:
      max-upper-bound: 1.9776e-05
      median-lower-bound: 4.776e-06
      median-upper-bound: 1.9104e-05
      min-lower-bound: 4.776e-06
    Load/1:
      max-upper-bound: 0.000108176
      median-lower-bound: 1.9106e-05
      median-upper-bound: 7.6424e-05
      min-lower-bound: 1.8912e-05
    Load/2:
      max-upper-bound: 0.00043296
      median-lower-bound: 0.00010756
      median-upper-bound: 0.00043024
      min-lower-bound: 0.000107404
    Load/3:
      max-upper-bound: 0.000766288
      median-lower-bound: 0.000187162
      median-upper-bound: 0.000748648
      min-lower-bound: 0.000185116
    Load/4:
      max-upper-bound: 0.000961368
      median-lower-bound: 0.000237486
      median-upper-bound: 0.000949944
      min-lower-bound: 0.000237038
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Send a message.
  code: |
    uint64_t message;

    ctx->begin = T_tick();
    ctx->status = rtems_message_queue_send(
      ctx->queue_id,
      &message,
      sizeof( message )
    );
  description: null
test-cleanup:
  brief: |
    Move worker to scheduler A.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_A_ID, PRIO_HIGH );
  description: null
test-prepare:
  brief: |
    Move worker to scheduler B.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_B_ID, PRIO_NORMAL );
  description: null
test-setup:
  brief: |
    Let the worker wait on the message queue.
  code: |
    Send( ctx, EVENT_RECEIVE | EVENT_RECEIVE_END );
    WaitForNextTask( 1, ctx->worker_id );
  description: null
test-teardown:
  brief: |
    Make sure the worker waits for the next event.  Set the measured runtime.
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    WaitForNextTask( 1, ctx->worker_id );
    *delta = ctx->end - ctx->begin;

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with distinct home schedulers.  Let :math:`B`
  be a time point measured by U right before a call to ${../if/send:/name}
  which unblocks the waiting task V which is scheduled on another
  processor.  Let :math:`E` be a time point measured by V right after the
  first context switch after :math:`B`.

  While the execution environment is ${.:/environment}, while a message queue
  is empty, while only task V waits on the message queue, while the
  measurement sample is :math:`E - B`, when exactly
  ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
