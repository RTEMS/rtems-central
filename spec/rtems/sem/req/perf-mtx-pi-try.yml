SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Try to obtain the unavailable mutex.
  code: |
    ctx->status = rtems_semaphore_obtain( ctx->mutex_id, RTEMS_NO_WAIT, 0 );
  description: null
test-cleanup:
  brief: |
    Make the mutex available.
  code: |
    Send( ctx, EVENT_RELEASE );
  description: null
test-prepare:
  brief: |
    Make the mutex unavailable.
  code: |
    Send( ctx, EVENT_OBTAIN );
  description: null
test-setup: null
test-teardown:
  brief: |
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc( ctx->status, RTEMS_UNSATISFIED );

    return tic == toc;
  description: null
text: |
  While the execution environment is ${.:/environment}, while the semaphore is
  a priority inheritance mutex, while the measurement sample is the runtime of
  exactly one unsatisfied call to ${../if/obtain:/name} which immediately
  returns, when exactly ${../val/perf:/params/sample-count} samples are
  collected, the ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
