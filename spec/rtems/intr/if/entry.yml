SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
brief: |
  This structure represents an interrupt entry.
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
definition:
- default:
    brief: |
      This member is the interrupt handler routine.
    definition: ${handler:/name} ${.:name}
    description: null
    kind: member
    name: handler
  variants: []
- default:
    brief: |
      This member is the interrupt handler argument.
    definition: void *${.:name}
    description: null
    kind: member
    name: arg
  variants: []
- default:
    brief: |
      This member is the reference to the next entry or ${/c/if/null:/name}.
    definition: struct rtems_interrupt_entry *${.:name}
    description: null
    kind: member
    name: next
  variants: []
- default:
    brief: |
      This member is the descriptive information of the entry
    definition: const char *${.:name}
    description: null
    kind: member
    name: info
  variants: []
definition-kind: typedef-and-struct
description: null
enabled-by: true
index-entries: []
interface-type: struct
links:
- role: interface-placement
  uid: header-2
- role: interface-ingroup
  uid: group
name: rtems_interrupt_entry
notes: |
  This structure shall be treated as an opaque data type from the
  ${/glossary/api:/term} point of view.  Members shall not be accessed
  directly.  An entry may be initialized by ${entry-initializer:/name} or
  ${entry-initialize:/name}.  It may be installed for an interrupt vector with
  ${entry-install:/name} and removed from an interrupt vector by
  ${entry-remove:/name}.
type: interface
