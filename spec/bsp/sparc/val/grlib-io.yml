SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
links: []
test-actions:
- action-brief: |
    Call ${../if/grlib-load-08:/name} to load a prepared value.
  action-code: |
    uint8_t reg_8;
    uint8_t val_8;

    reg_8 = 0x81;
    val_8 = grlib_load_8( &reg_8 );
  checks:
  - brief: |
      Check that the returned value is equal to the prepared value.
    code: |
      T_step_eq_u8( ${step}, val_8, 0x81 );
    links:
    - role: validation
      uid: ../req/grlib-load-08
  links: []
- action-brief: |
    Call ${../if/grlib-load-16:/name} to load a prepared value.
  action-code: |
    uint16_t reg_16;
    uint16_t val_16;

    reg_16 = 0x8001;
    val_16 = grlib_load_16( &reg_16 );
  checks:
  - brief: |
      Check that the returned value is equal to the prepared value.
    code: |
      T_step_eq_u16( ${step}, val_16, 0x8001 );
    links:
    - role: validation
      uid: ../req/grlib-load-16
  links: []
- action-brief: |
    Call ${../if/grlib-load-32:/name} to load a prepared value.
  action-code: |
    uint32_t reg_32;
    uint32_t val_32;

    reg_32 = 0x80000001;
    val_32 = grlib_load_32( &reg_32 );
  checks:
  - brief: |
      Check that the returned value is equal to the prepared value.
    code: |
      T_step_eq_u32( ${step}, val_32, 0x80000001 );
    links:
    - role: validation
      uid: ../req/grlib-load-32
  links: []
- action-brief: |
    Call ${../if/grlib-load-64:/name} to load a prepared value.
  action-code: |
    uint64_t reg_64;
    uint64_t val_64;

    reg_64 = 0x8000000000000001;
    val_64 = grlib_load_64( &reg_64 );
  checks:
  - brief: |
      Check that the returned value is equal to the prepared value.
    code: |
      T_step_eq_u64( ${step}, val_64, 0x8000000000000001 );
    links:
    - role: validation
      uid: ../req/grlib-load-64
  links: []
- action-brief: |
    Call ${../if/grlib-store-08:/name} to store a value to an object.
  action-code: |
    uint8_t reg_8;

    grlib_store_8( &reg_8, 0x81 );
  checks:
  - brief: |
      Check that the value of the object is equal to the stored value.
    code: |
      T_step_eq_u8( ${step}, reg_8, 0x81 );
    links:
    - role: validation
      uid: ../req/grlib-store-08
  links: []
- action-brief: |
    Call ${../if/grlib-store-16:/name} to store a value to an object.
  action-code: |
    uint16_t reg_16;

    grlib_store_16( &reg_16, 0x8001 );
  checks:
  - brief: |
      Check that the value of the object is equal to the stored value.
    code: |
      T_step_eq_u16( ${step}, reg_16, 0x8001 );
    links:
    - role: validation
      uid: ../req/grlib-store-16
  links: []
- action-brief: |
    Call ${../if/grlib-store-32:/name} to store a value to an object.
  action-code: |
    uint32_t reg_32;

    grlib_store_32( &reg_32, 0x80000001 );
  checks:
  - brief: |
      Check that the value of the object is equal to the stored value.
    code: |
      T_step_eq_u32( ${step}, reg_32, 0x80000001 );
    links:
    - role: validation
      uid: ../req/grlib-store-32
  links: []
- action-brief: |
    Call ${../if/grlib-store-64:/name} to store a value to an object.
  action-code: |
    uint64_t reg_64;

    grlib_store_64( &reg_64, 0x8000000000000001 );
  checks:
  - brief: |
      Check that the value of the object is equal to the stored value.
    code: |
      T_step_eq_u64( ${step}, reg_64, 0x8000000000000001 );
    links:
    - role: validation
      uid: ../req/grlib-store-64
  links: []
test-brief: |
  Tests the SPARC-specific GRLIB API.
test-context: []
test-context-support: null
test-description: null
test-header: null
test-includes:
- dev/grlib/io.h
test-local-includes: []
test-setup: null
test-stop: null
test-support: null
test-target: testsuites/validation/tc-bsp-sparc-leon3.c
test-teardown: null
type: test-case
