SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
brief: |
  Initializes the device specified by the device major and minor numbers.
copyrights:
- Copyright (C) 2020 embedded brains GmbH (http://www.embedded-brains.de)
- Copyright (C) 1988, 2008 On-Line Applications Research Corporation (OAR)
definition:
  default:
    body: null
    params:
    - ${device-major-number:/name} ${.:/params[0]/name}
    - ${device-minor-number:/name} ${.:/params[1]/name}
    - void *${.:/params[2]/name}
    return: ${../../status/if/code:/name}
  variants: []
description: |
  This directive calls the device driver initialization entry registered in the
  Device Driver Table for the specified device major number.
enabled-by: true
index-entries: []
interface-type: function
links:
- role: interface-placement
  uid: header
- role: interface-ingroup
  uid: group
name: rtems_io_initialize
notes: |
  This directive is automatically invoked for each device driver defined by the
  application configuration during the system initialization and via the
  ${register-driver:/name} directive.

  A device driver initialization entry is responsible for initializing all
  hardware and data structures associated with a device.  If necessary, it can
  allocate memory to be used during other operations.
params:
- description: |
    is the major number of the device.
  dir: null
  name: major
- description: |
    is the minor number of the device.
  dir: null
  name: minor
- description: |
    is the argument passed to the device driver initialization entry.
  dir: null
  name: argument
return:
  return: |
    Other status codes may be returned by the device driver initialization
    routine.
  return-values:
  - description: |
      The requested operation was successful.
    value: ${../../status/if/successful:/name}
  - description: |
      The device major number was invalid.
    value: ${../../status/if/invalid-number:/name}
type: interface
