SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH & Co. KG
enabled-by: true
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Start the worker task.
  code: |
    ctx->begin = T_tick();
    ctx->status = rtems_task_start(
      ctx->worker_id,
      Worker,
      (rtems_task_argument) ctx
    );
  description: null
test-cleanup: null
test-prepare: null
test-setup:
  brief: |
    Create a worker task.
  code: |
    ctx->worker_id = CreateTask( "WORK", PRIO_HIGH );
  description: null
test-teardown:
  brief: |
    Set the measured runtime.  Delete the worker.  Discard samples interrupted by
    a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    *delta = ctx->end - ctx->begin;
    DeleteTask( ctx->worker_id );

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with the same home scheduler.  Let :math:`B`
  be a time point measured by U right before a call to ${../if/start:/name}
  which starts task V which preempts the caller.  Let :math:`E` be a time
  point measured by V right after the first context switch after :math:`B`.

  While the execution environment is ${.:/environment}, while the measurement
  sample is :math:`E - B`, when exactly ${../val/perf:/params/sample-count}
  samples are collected, the ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
