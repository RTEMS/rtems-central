SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
functional-type: action
links:
- role: interface-function
  uid: ../if/delete
post-conditions:
- name: Status
  states:
  - name: Ok
    test-code: |
      ctx->extension_id = 0;
      T_rsc_success( ctx->status );
    text: |
      The return status of ${../if/delete:/name} shall be
      ${../../status/if/successful:/name}.
  - name: InvId
    test-code: |
      T_rsc( ctx->status, RTEMS_INVALID_ID );
    text: |
      The return status of ${../if/delete:/name} shall be
      ${../../status/if/invalid-id:/name}.
  test-epilogue: null
  test-prologue: null
- name: Name
  states:
  - name: Valid
    test-code: |
      id = 0;
      sc = rtems_extension_ident( NAME, &id );
      T_rsc_success( sc );
      T_eq_u32( id, ctx->extension_id );
    text: |
      The unique object name shall identify an extension set.
  - name: Invalid
    test-code: |
      sc = rtems_extension_ident( NAME, &id );
      T_rsc( sc, RTEMS_INVALID_NAME );
    text: |
      The unique object name shall not identify an extension set.
  test-epilogue: null
  test-prologue: |
    rtems_status_code sc;
    rtems_id          id;
pre-conditions:
- name: Id
  states:
  - name: NoObj
    test-code: |
      /* Already set by prologue */
    text: |
      The ${../if/delete:/params[0]/name} parameter shall not be associated
      with an extension set.
  - name: ExtTdSw
    test-code: |
      valid_id = true;
      ctx->table.thread_switch = ThreadSwitch;
    text: |
      The ${../if/delete:/params[0]/name} parameter shall be associated with
      an extension set with a thread switch extension.
  - name: ExtNoTdSw
    test-code: |
      valid_id = true;
      ctx->table.thread_switch = NULL;
    text: |
      The ${../if/delete:/params[0]/name} parameter shall be associated with
      an extension set without a thread switch extension.
  test-epilogue: |
    sc = rtems_extension_create(
      NAME,
      &ctx->table,
      &ctx->extension_id
    );
    T_rsc_success( sc );

    if ( valid_id ) {
      ctx->id = ctx->extension_id;
    } else {
      ctx->id = 0;
    }
  test-prologue: |
    rtems_status_code sc;
    bool              valid_id;

    valid_id = false;
rationale: null
references: []
requirement-type: functional
skip-reasons: {}
test-action: |
  ctx->status = rtems_extension_delete( ctx->id );
test-brief: null
test-cleanup: |
  if ( ctx->extension_id != 0 ) {
    rtems_status_code sc;

    sc = rtems_extension_delete( ctx->extension_id );
    T_rsc_success( sc );
  }
test-context:
- brief: null
  description: null
  member: |
    rtems_id extension_id
- brief: null
  description: null
  member: |
    rtems_extensions_table table
- brief: null
  description: null
  member: |
    rtems_id id
- brief: null
  description: null
  member: |
    rtems_status_code status
test-context-support: null
test-description: null
test-header: null
test-includes:
- rtems.h
- string.h
test-local-includes: []
test-prepare: null
test-setup:
  brief: null
  code: |
    memset( ctx, 0, sizeof( *ctx ) );
  description: null
test-stop: null
test-support: |
  #define NAME rtems_build_name( 'T', 'E', 'S', 'T' )

  static void ThreadSwitch( rtems_tcb *executing,  rtems_tcb *heir)
  {
    (void) executing;
    (void) heir;
  }
test-target: testsuites/validation/tc-userext-delete.c
test-teardown: null
text: ${.:text-template}
transition-map:
- enabled-by: true
  post-conditions:
    Status: Ok
    Name: Invalid
  pre-conditions:
    Id:
    - ExtTdSw
    - ExtNoTdSw
- enabled-by: true
  post-conditions:
    Status: InvId
    Name: Valid
  pre-conditions:
    Id:
    - NoObj
type: requirement
