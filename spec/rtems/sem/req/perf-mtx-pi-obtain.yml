SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: true
limits: {}
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Obtain the available mutex.
  code: |
    ctx->status = rtems_semaphore_obtain(
      ctx->mutex_id,
      RTEMS_WAIT,
      RTEMS_NO_TIMEOUT
    );
  description: null
test-cleanup: null
test-prepare: null
test-setup: null
test-teardown:
  brief: |
    Release the mutex.  Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    ReleaseMutex( ctx->mutex_id );

    return tic == toc;
  description: null
text: |
  While the execution environment is ${.:/environment}, while the semaphore is
  a priority inheritance mutex, while the measurement sample is the runtime of
  exactly one successful call to ${../if/obtain:/name} which immediately
  obtains the mutex, when exactly ${../val/perf:/params/sample-count} samples
  are collected, the ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
