SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by:
  and:
  - RTEMS_SMP
  - bsps/sparc/leon3
links: []
test-actions:
- action-brief: |
    Request the second processor to wait in an infinite loop with maskable
    interrupts disabled.  The test suite will only finish execution if
    bsp_fatal_extension() halts the processor after a shutdown request timeout.
  action-code: |
    _Per_CPU_Submit_job( _Per_CPU_Get_by_index( 1 ), &idle_job );
  checks:
  - brief: |
      Check that the expected fatal source is present.
    code: |
      T_step_eq_int( ${step}, ctx->source, RTEMS_FATAL_SOURCE_APPLICATION );
    links: []
  - brief: |
      Check that the expected fatal code is present.
    code: |
      T_step_eq_ulong( ${step}, ctx->code, 123456 );
    links: []
  links:
  - role: validation
    uid: ../req/fatal-shutdown-request
  - role: validation
    uid: ../req/fatal-shutdown-self
  - role: validation
    uid: ../req/fatal-shutdown-timeout
test-brief: |
  Tests a fatal error.
test-context: []
test-context-support: null
test-description: null
test-header:
  code: null
  freestanding: true
  includes:
  - rtems.h
  local-includes: []
  run-params:
  - description: |
      is fatal source.
    dir: null
    name: source
    specifier: ${/rtems/userext/if/fatal-source:/name} ${.:name}
  - description: |
      is fatal code.
    dir: null
    name: code
    specifier: ${/rtems/userext/if/fatal-code:/name} ${.:name}
  target: testsuites/validation/tr-fatal-bsp-sparc-leon3-shutdown-timeout.h
test-includes:
- rtems/sysinit.h
- rtems/score/percpu.h
- bsp/leon3.h
test-local-includes:
- tr-fatal-bsp-sparc-leon3-shutdown-timeout.h
test-setup: null
test-stop: null
test-support: |
  static void IdleHandler( void *arg )
  {
    (void) arg;
    (void) _CPU_Thread_Idle_body( 0 );
  }

  static const Per_CPU_Job_context idle_context = {
    .handler = IdleHandler
  };

  static Per_CPU_Job idle_job = {
    .context = &idle_context
  };

  static void TriggerTestCase( void )
  {
    rtems_fatal( RTEMS_FATAL_SOURCE_APPLICATION, 123456 );
  }

  RTEMS_SYSINIT_ITEM(
    TriggerTestCase,
    RTEMS_SYSINIT_DEVICE_DRIVERS,
    RTEMS_SYSINIT_ORDER_MIDDLE
  );
test-target: testsuites/validation/tr-fatal-bsp-sparc-leon3-shutdown-timeout.c
test-teardown: null
type: test-case
