SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
brief: |
  Starts the task.
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
- Copyright (C) 1988, 2017 On-Line Applications Research Corporation (OAR)
definition:
  default:
    attributes: null
    body: null
    params:
    - ${../../type/if/id:/name} ${.:/params[0]/name}
    - ${entry:/name} ${.:/params[1]/name}
    - ${argument:/name} ${.:/params[2]/name}
    return: ${../../status/if/code:/name}
  variants: []
description: |
  This directive readies the task, specified by ${.:/params[0]/name}, for
  execution based on the priority and execution mode specified when the task
  was created.  The entry point of the task is given in ${.:/params[1]/name}.
  The task's entry point argument is contained in ${.:/params[2]/name}.
enabled-by: true
index-entries:
- starting a task
interface-type: function
links:
- role: interface-placement
  uid: header
- role: interface-ingroup
  uid: group
- role: constraint
  uid: /constraint/directive-ctx-isr
- role: constraint
  uid: /constraint/directive-ctx-devinit
- role: constraint
  uid: /constraint/directive-ctx-task
- role: constraint
  uid: /constraint/unblock-may-preempt
name: rtems_task_start
notes: |
  The type of the entry point argument is an unsigned integer type.  However,
  the integer type has the property that any valid pointer to ``void`` can be
  converted to this type and then converted back to a pointer to ``void``.  The
  result will compare equal to the original pointer.  The type can represent at
  least 32 bits.  Some applications use the entry point argument as an index
  into a parameter table to get task-specific parameters.

  Any actions performed on a dormant task such as suspension or change of
  priority are nullified when the task is initiated via the ${start:/name}
  directive.
params:
- description: |
    is the task identifier.  The constant ${self-define:/name} may be used to
    specify the calling task.
  dir: null
  name: id
- description: |
    is the task entry point.
  dir: null
  name: entry_point
- description: |
    is the task entry point argument.
  dir: null
  name: argument
return:
  return: null
  return-values:
  - description: |
      The requested operation was successful.
    value: ${../../status/if/successful:/name}
  - description: |
      The ${.:/params[1]/name} parameter was ${/c/if/null:/name}.
    value: ${../../status/if/invalid-address:/name}
  - description: |
      There was no task associated with the identifier specified by
      ${.:/params[0]/name}.
    value: ${../../status/if/invalid-id:/name}
  - description: |
      The task was not in the dormant state.
    value: ${../../status/if/incorrect-state:/name}
  - description: |
      The task resided on a remote node.
    value: ${../../status/if/illegal-on-remote-object:/name}
type: interface
