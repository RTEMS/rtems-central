SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021 embedded brains GmbH (http://www.embedded-brains.de)
enabled-by: RTEMS_SMP
limits:
  sparc/gr712rc/smp/qual-only/5zrudgccHYC6azWEU3SRYUnkVXCeq9MufBd5zmfMeEg=:
    DirtyCache:
      max-upper-bound: 8.2e-05
      median-lower-bound: 2.05e-05
      median-upper-bound: 8.2e-05
      min-lower-bound: 2.05e-05
    FullCache:
      max-upper-bound: 8.2e-05
      median-lower-bound: 2.0e-05
      median-upper-bound: 8.0e-05
      min-lower-bound: 1.95e-05
    HotCache:
      max-upper-bound: 8.0e-05
      median-lower-bound: 1.95e-05
      median-upper-bound: 7.8e-05
      min-lower-bound: 1.95e-05
    Load/1:
      max-upper-bound: 9.2e-05
      median-lower-bound: 2.25e-05
      median-upper-bound: 9.0e-05
      min-lower-bound: 2.25e-05
    Load/2:
      max-upper-bound: 9.2e-05
      median-lower-bound: 2.25e-05
      median-upper-bound: 9.0e-05
      min-lower-bound: 2.2e-05
  sparc/gr712rc/smp/qual-only/NDvyW8PTjD_thgV3P8TV_7MXVFP9EFvrevMzUX574lY=:
    DirtyCache:
      max-upper-bound: 0.000218
      median-lower-bound: 5.4e-05
      median-upper-bound: 0.000216
      min-lower-bound: 5.35e-05
    FullCache:
      max-upper-bound: 0.000166
      median-lower-bound: 1.8e-05
      median-upper-bound: 7.2e-05
      min-lower-bound: 1.8e-05
    HotCache:
      max-upper-bound: 7.2e-05
      median-lower-bound: 1.75e-05
      median-upper-bound: 7.0e-05
      min-lower-bound: 1.7e-05
    Load/1:
      max-upper-bound: 0.000214
      median-lower-bound: 5.35e-05
      median-upper-bound: 0.000214
      min-lower-bound: 5.3e-05
    Load/2:
      max-upper-bound: 0.000244
      median-lower-bound: 6.05e-05
      median-upper-bound: 0.000242
      min-lower-bound: 6.0e-05
  sparc/gr740/smp/qual-only/_xQeTNJwSla2bVbhWPVcI0emLk2bE_GVQfvzt9CN84k=:
    DirtyCache:
      max-upper-bound: 7.792e-05
      median-lower-bound: 1.927e-05
      median-upper-bound: 7.708e-05
      min-lower-bound: 1.912e-05
    FullCache:
      max-upper-bound: 7.66e-05
      median-lower-bound: 1.902e-05
      median-upper-bound: 7.608e-05
      min-lower-bound: 1.844e-05
    HotCache:
      max-upper-bound: 7.544e-05
      median-lower-bound: 1.886e-05
      median-upper-bound: 7.544e-05
      min-lower-bound: 1.881e-05
    Load/1:
      max-upper-bound: 8.528e-05
      median-lower-bound: 2.127e-05
      median-upper-bound: 8.508e-05
      min-lower-bound: 2.092e-05
    Load/2:
      max-upper-bound: 8.616e-05
      median-lower-bound: 2.136e-05
      median-upper-bound: 8.544e-05
      min-lower-bound: 2.073e-05
    Load/3:
      max-upper-bound: 8.548e-05
      median-lower-bound: 2.132e-05
      median-upper-bound: 8.528e-05
      min-lower-bound: 2.089e-05
    Load/4:
      max-upper-bound: 8.592e-05
      median-lower-bound: 2.1e-05
      median-upper-bound: 8.4e-05
      min-lower-bound: 2.081e-05
  sparc/gr740/smp/qual-only/c1ZkBOsUIJ-siPI7pK7knk0z6uni1pxOFlZ2eLDflYc=:
    DirtyCache:
      max-upper-bound: 8.8912e-05
      median-lower-bound: 1.8192e-05
      median-upper-bound: 7.2768e-05
      min-lower-bound: 1.7966e-05
    FullCache:
      max-upper-bound: 9.0816e-05
      median-lower-bound: 7.876e-06
      median-upper-bound: 3.1504e-05
      min-lower-bound: 7.806e-06
    HotCache:
      max-upper-bound: 1.7104e-05
      median-lower-bound: 4.134e-06
      median-upper-bound: 1.6536e-05
      min-lower-bound: 4.134e-06
    Load/1:
      max-upper-bound: 0.000107288
      median-lower-bound: 1.7154e-05
      median-upper-bound: 6.8616e-05
      min-lower-bound: 1.6958e-05
    Load/2:
      max-upper-bound: 0.000369872
      median-lower-bound: 9.2262e-05
      median-upper-bound: 0.000369048
      min-lower-bound: 9.2108e-05
    Load/3:
      max-upper-bound: 0.000647064
      median-lower-bound: 0.000157334
      median-upper-bound: 0.000629336
      min-lower-bound: 0.00015498
    Load/4:
      max-upper-bound: 0.000817592
      median-lower-bound: 0.00020107
      median-upper-bound: 0.00080428
      min-lower-bound: 0.000200576
links:
- role: requirement-refinement
  uid: perf-runtime
- role: runtime-measurement-request
  uid: ../val/perf
non-functional-type: performance-runtime
params: {}
rationale: null
references: []
requirement-type: non-functional
test-body:
  brief: |
    Send two events.  Satisfy the event condition.
  code: |
    ctx->begin = T_tick();
    ctx->status = rtems_event_send( ctx->worker_id, EVENT_END | EVENT_OTHER );
  description: null
test-cleanup:
  brief: |
    Move worker to scheduler A.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_A_ID, PRIO_HIGH );
  description: null
test-prepare:
  brief: |
    Move worker to scheduler B.
  code: |
    SetScheduler( ctx->worker_id, SCHEDULER_B_ID, PRIO_NORMAL );
  description: null
test-setup: null
test-teardown:
  brief: |
    Make sure the worker waits for the next event.  Set the measured runtime.
    Discard samples interrupted by a clock tick.
  code: |
    T_quiet_rsc_success( ctx->status );

    WaitForNextTask( 1, ctx->worker_id );
    *delta = ctx->end - ctx->begin;

    return tic == toc;
  description: null
text: |
  Let U and V be two tasks with distinct home schedulers.  Let :math:`B`
  be a time point measured by U right before a call to ${../if/send:/name}
  which does satisfy the event condition of the waiting task V which is
  scheduled on another processor.  Let :math:`E` be a time point measured by
  V right after the first context switch after :math:`B`.

  While the execution environment is ${.:/environment}, while the task V
  waits for events, while the measurement sample is :math:`E - B`, when exactly
  ${../val/perf:/params/sample-count} samples are collected, the
  ${.:/limit-kind} shall be ${.:/limit-condition}.
type: requirement
