SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
brief: |
  Task terminate extensions are invoked when a task terminates.
copyrights:
- Copyright (C) 2009, 2021 embedded brains GmbH (http://www.embedded-brains.de)
definition:
  default: ${/score/userext/if/thread-terminate:/name} ${.:/name}
  variants: []
description: null
enabled-by: true
index-entries: []
interface-type: typedef
links:
- role: interface-placement
  uid: header
- role: interface-ingroup
  uid: group
- role: constraint
  uid: /constraint/thread-dispatching-enabled
- role: constraint
  uid: /constraint/thread-life-protected
- role: constraint
  uid: /constraint/object-allocator-not-owner
name: rtems_task_terminate_extension
notes: |
  The task terminate extensions are invoked in
  ${/glossary/extension-reverse-order:/term}.

  The task terminate extensions are invoked in the context of the terminating
  thread right before the thread dispatch to the heir thread should take place.
  The thread stack reflects the previous execution context.  The POSIX cleanup
  and key destructors execute in this context.

  Thread restart and delete requests issued by terminate extensions lead to
  recursion.
params:
- description: |
    is the ${/glossary/tcb:/term} of the executing thread.  This is the
    terminating thread.
  dir: null
  name: executing
return: null
type: interface
