SPDX-License-Identifier: CC-BY-SA-4.0 OR BSD-2-Clause
copyrights:
- Copyright (C) 2021, 2022 embedded brains GmbH & Co. KG
enabled-by: true
links: []
test-actions:
- action-brief: |
    Use the ${../if/get-ticks-since-boot-macro:/name} directive before and
    after exactly one clock tick.
  action-code: |
    rtems_interval result_0;
    rtems_interval result_1;

    result_0 = rtems_clock_get_ticks_since_boot();
    ClockTick();
    result_1 = rtems_clock_get_ticks_since_boot();
  checks:
  - brief: |
      Check that ${/glossary/clock-tick:/term} gets incremented.
    code: |
      T_step_eq_u32( ${.:/step}, result_1 - result_0, 1 );
    links:
    - role: validation
      uid: ../req/get-ticks-since-boot-macro
  links: []
- action-brief: |
    Use the ${../if/get-ticks-since-boot:/name} directive before and after
    exactly one clock tick.
  action-code: |
    rtems_interval result_0;
    rtems_interval result_1;

    #undef rtems_clock_get_ticks_since_boot

    result_0 = rtems_clock_get_ticks_since_boot();
    ClockTick();
    result_1 = rtems_clock_get_ticks_since_boot();
  checks:
  - brief: |
      Check that ${/glossary/clock-tick:/term} gets incremented.
    code: |
      T_step_eq_u32( ${.:/step}, result_1 - result_0, 1 );
    links:
    - role: validation
      uid: ../req/get-ticks-since-boot
  links: []
- action-brief: |
    Use the ${../if/get-ticks-per-second-macro:/name} directive.
  action-code: |
    rtems_interval result;

    result = rtems_clock_get_ticks_per_second();
  checks:
  - brief: |
      Check that ${../if/get-ticks-per-second:/name} actually returns
      1us / CONFIGURE_MICROSECONDS_PER_TICK.
    code: |
      T_step_eq_u32( ${.:/step}, result, 1000000UL / TEST_MICROSECONDS_PER_TICK );
    links:
    - role: validation
      uid: ../req/get-ticks-per-second-macro
  links: []
- action-brief: |
    Use the ${../if/get-ticks-per-second:/name} directive.
  action-code: |
    rtems_interval result;

    #undef rtems_clock_get_ticks_per_second

    result = rtems_clock_get_ticks_per_second();
  checks:
  - brief: |
      Check that ${../if/get-ticks-per-second:/name} actually returns
      1us / CONFIGURE_MICROSECONDS_PER_TICK.
    code: |
      T_step_eq_u32( ${.:/step}, result, 1000000UL / TEST_MICROSECONDS_PER_TICK );
    links:
    - role: validation
      uid: ../req/get-ticks-per-second
  links: []
test-brief: |
  Tests some ${../if/group:/name} directives.
test-context: []
test-context-support: null
test-description: null
test-header: null
test-includes:
- rtems.h
test-local-includes:
- ts-config.h
- tx-support.h
test-setup: null
test-stop: null
test-support: null
test-target: testsuites/validation/tc-clock.c
test-teardown: null
type: test-case
